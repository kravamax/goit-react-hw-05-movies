{"version":3,"file":"static/js/990.436eb2b9.chunk.js","mappings":"8LAsCA,UAjCiB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA8BN,GAASO,MAAK,gBAAGJ,EAAH,EAAGA,KAAH,OAAcC,EAAQD,QACjE,CAACH,IAwBJ,OAAO,yBAAMG,GApBT,wBACGA,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACR,2BACE,gBACEC,IACEJ,EAAY,yCAC0BA,GAD1B,sCAIdK,IAAI,GACJC,MAAO,OAET,kCAAUL,MACV,uCAAeC,OAXRC,SAkBoB,gD,oLCnCjCI,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkB7B,GAChC,OAAOkB,EAAuB,GAAD,OACxBF,EADwB,kBACNhB,EADM,oBACaiB,IAIrC,SAASa,EAAe9B,GAC7B,OAAOkB,EAAuB,GAAD,OACxBF,EADwB,kBACNhB,EADM,4BACqBiB,EADrB,oBAKxB,SAASc,EAAkB/B,GAChC,OAAOkB,EAAuB,GAAD,OACxBF,EADwB,kBACNhB,EADM,4BACqBiB,EADrB,2BAKxB,SAASe,EAAiBC,GAC/B,OAAOf,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCgB,EADzC","sources":["components/pages/CastPage.jsx","services/movies-api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport * as moviesFetchAPI from '../../services/movies-api';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    moviesFetchAPI.fetchMovieCast(movieId).then(({ cast }) => setCast(cast));\n  }, [movieId]);\n\n  const getCastsList = () => {\n    return (\n      <ul>\n        {cast.map(({ profile_path, name, character, id }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://via.placeholder.com/150x225`\n              }\n              alt=\"\"\n              width={150}\n            />\n            <p>name: {name}</p>\n            <p>character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return <div>{cast ? getCastsList() : <div>Not found cast</div>}</div>;\n};\n\nexport default CastPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '296d44092a8a94dcab4a4c4bb6b7444f';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchMoviesQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","moviesFetchAPI","then","map","profile_path","name","character","id","src","alt","width","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMoviesQuery","query"],"sourceRoot":""}