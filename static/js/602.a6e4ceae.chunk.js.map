{"version":3,"file":"static/js/602.a6e4ceae.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage.jsx","services/movies-api.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["import {\n  NavLink,\n  useParams,\n  Outlet,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense, lazy } from 'react';\n\nimport * as moviesFetchAPI from '../services/movies-api';\nimport s from './Pages.module.css';\nimport { BsArrowLeftCircle } from 'react-icons/bs';\nconst MovieDetailsInfo = lazy(() => import('../components/MovieDetailsInfo'));\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const {\n    title,\n    name,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = movie;\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    moviesFetchAPI.fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const getGenresList = () => {\n    if (!movie) return;\n\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const getReleaseYear = () => {\n    return release_date ? `(${release_date.slice(0, 4)})` : '(Upcoming)';\n  };\n\n  return (\n    <>\n      {movie && (\n        <div className={s.moviePageContainer}>\n          <Link to={backLinkHref}>\n            <button className={s.buttonToBack}>\n              <BsArrowLeftCircle /> Back\n            </button>\n          </Link>\n          <MovieDetailsInfo\n            poster_path={poster_path}\n            title={title}\n            name={name}\n            release_date={() => getReleaseYear()}\n            vote_average={vote_average}\n            overview={overview}\n            getGenresList={() => getGenresList()}\n          />\n          <hr />\n          <div>Additional information: </div>\n          <ul className={s.additionalList}>\n            <li className={s.additionalItem}>\n              <NavLink\n                to=\"cast\"\n                state={{ from: backLinkHref }}\n                className={({ isActive }) =>\n                  [s.additionalItemLink] + (isActive ? ` ${s.activeLink}` : '')\n                }\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li className={s.additionalItem}>\n              <NavLink\n                to=\"reviews\"\n                state={{ from: backLinkHref }}\n                className={({ isActive }) =>\n                  [s.additionalItemLink] + (isActive ? ` ${s.activeLink}` : '')\n                }\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Load Additional information...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '296d44092a8a94dcab4a4c4bb6b7444f';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchMoviesQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePageContainer\":\"Pages_moviePageContainer__m+jyf\",\"buttonToBack\":\"Pages_buttonToBack__i+UyM\",\"additionalList\":\"Pages_additionalList__BRN9-\",\"additionalItem\":\"Pages_additionalItem__xw52V\",\"additionalItemLink\":\"Pages_additionalItemLink__-zwF5\",\"castItem\":\"Pages_castItem__CZ8Fz\",\"photoCell\":\"Pages_photoCell__kBgWd\",\"nameCell\":\"Pages_nameCell__ENCJ3\",\"characterCell\":\"Pages_characterCell__dhtuS\",\"tableHead\":\"Pages_tableHead__wV4CU\",\"activeLink\":\"Pages_activeLink__wWiQU\",\"reviewsContainer\":\"Pages_reviewsContainer__D86Ik\",\"reviewsContainerLeft\":\"Pages_reviewsContainerLeft__SRp1X\",\"reviewsContainerRight\":\"Pages_reviewsContainerRight__O8OdI\"};"],"names":["MovieDetailsInfo","lazy","movieId","useParams","useState","movie","setMovie","title","name","poster_path","vote_average","overview","genres","release_date","backLinkHref","useLocation","state","from","useEffect","moviesFetchAPI","then","getReleaseYear","slice","className","s","to","getGenresList","map","genre","join","isActive","Suspense","fallback","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMoviesQuery","query"],"sourceRoot":""}