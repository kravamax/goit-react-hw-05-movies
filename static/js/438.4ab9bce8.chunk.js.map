{"version":3,"file":"static/js/438.4ab9bce8.chunk.js","mappings":"8LAoCA,UA/BoB,WAClB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACqBN,GAClBO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAWI,QACnC,CAACR,IAkBJ,OACE,yBAAMG,EAAQM,QAfZ,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,qCACA,6BAAKF,MACL,uCACA,uBAAIC,KACJ,oBALOC,SAa2B,iD,oLChCxCC,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkB3B,GAChC,OAAOgB,EAAuB,GAAD,OACxBF,EADwB,kBACNd,EADM,oBACae,IAIrC,SAASa,EAAe5B,GAC7B,OAAOgB,EAAuB,GAAD,OACxBF,EADwB,kBACNd,EADM,4BACqBe,EADrB,oBAKxB,SAASc,EAAkB7B,GAChC,OAAOgB,EAAuB,GAAD,OACxBF,EADwB,kBACNd,EADM,4BACqBe,EADrB,2BAKxB,SAASe,EAAiBC,GAC/B,OAAOf,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCgB,EADzC","sources":["components/pages/ReviewsPage.jsx","services/movies-api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport * as moviesFetchAPI from '../../services/movies-api';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    moviesFetchAPI\n      .fetchMovieReviews(movieId)\n      .then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  const getReviewsList = () => {\n    return (\n      <ul>\n        {reviews.map(({ author, content, id }) => (\n          <li key={id}>\n            <h3>Author:</h3>\n            <p> {author}</p>\n            <h3>Comment: </h3>\n            <p>{content}</p>\n            <hr />\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div>{reviews.length ? getReviewsList() : <p>Reviews not found</p>}</div>\n  );\n};\n\nexport default ReviewsPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '296d44092a8a94dcab4a4c4bb6b7444f';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchMoviesQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","moviesFetchAPI","then","results","length","map","author","content","id","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMoviesQuery","query"],"sourceRoot":""}