{"version":3,"file":"static/js/631.93a7f8cc.chunk.js","mappings":"sMA4CA,UAvCiB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA8BN,GAASO,MAAK,gBAAGJ,EAAH,EAAGA,KAAH,OAAcC,EAAQD,QACjE,CAACH,IA8BJ,OAAO,yBAAMG,GA1BT,gBAAIK,UAAWC,EAAAA,EAAAA,SAAf,WACE,gBAAID,UAAWC,EAAAA,EAAAA,SAAf,WACE,cAAGD,UAAWC,EAAAA,EAAAA,UAAd,oBACA,cAAGD,UAAWC,EAAAA,EAAAA,SAAd,mBACA,cAAGD,UAAWC,EAAAA,EAAAA,cAAd,sBAEDN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACR,gBAAaN,UAAWC,EAAAA,EAAAA,SAAxB,WACE,gBACEM,IACEJ,EAAY,yCAC0BA,GAD1B,sCAIdK,IAAI,GACJC,MAAO,GACPT,UAAWC,EAAAA,EAAAA,aAEb,cAAGD,UAAWC,EAAAA,EAAAA,SAAd,SAA2BG,KAC3B,cAAGJ,UAAWC,EAAAA,EAAAA,cAAd,SAAgCI,MAZzBC,UAmBoB,gD,oLCzCjCI,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkB/B,GAChC,OAAOoB,EAAuB,GAAD,OACxBF,EADwB,kBACNlB,EADM,oBACamB,IAIrC,SAASa,EAAehC,GAC7B,OAAOoB,EAAuB,GAAD,OACxBF,EADwB,kBACNlB,EADM,4BACqBmB,EADrB,oBAKxB,SAASc,EAAkBjC,GAChC,OAAOoB,EAAuB,GAAD,OACxBF,EADwB,kBACNlB,EADM,4BACqBmB,EADrB,2BAKxB,SAASe,EAAiBC,GAC/B,OAAOf,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCgB,EADzC,kC,iBClC/B,KAAgB,mBAAqB,kCAAkC,aAAe,4BAA4B,eAAiB,8BAA8B,eAAiB,8BAA8B,mBAAqB,kCAAkC,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,wBAAwB,cAAgB,6BAA6B,UAAY,yBAAyB,WAAa,0BAA0B,iBAAmB,gCAAgC,qBAAuB,oCAAoC,sBAAwB","sources":["pages/CastPage.jsx","services/movies-api.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport s from './Pages.module.css';\nimport * as moviesFetchAPI from '../services/movies-api';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    moviesFetchAPI.fetchMovieCast(movieId).then(({ cast }) => setCast(cast));\n  }, [movieId]);\n\n  const getCastsList = () => {\n    return (\n      <ul className={s.castList}>\n        <li className={s.castItem}>\n          <p className={s.photoCell}>photo</p>\n          <p className={s.nameCell}>name</p>\n          <p className={s.characterCell}>role </p>\n        </li>\n        {cast.map(({ profile_path, name, character, id }) => (\n          <li key={id} className={s.castItem}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://via.placeholder.com/150x225`\n              }\n              alt=\"\"\n              width={70}\n              className={s.photoCell}\n            />\n            <p className={s.nameCell}>{name}</p>\n            <p className={s.characterCell}>{character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return <div>{cast ? getCastsList() : <div>Not found cast</div>}</div>;\n};\n\nexport default CastPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '296d44092a8a94dcab4a4c4bb6b7444f';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchMoviesQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePageContainer\":\"Pages_moviePageContainer__m+jyf\",\"buttonToBack\":\"Pages_buttonToBack__i+UyM\",\"additionalList\":\"Pages_additionalList__BRN9-\",\"additionalItem\":\"Pages_additionalItem__xw52V\",\"additionalItemLink\":\"Pages_additionalItemLink__-zwF5\",\"castItem\":\"Pages_castItem__CZ8Fz\",\"photoCell\":\"Pages_photoCell__kBgWd\",\"nameCell\":\"Pages_nameCell__ENCJ3\",\"characterCell\":\"Pages_characterCell__dhtuS\",\"tableHead\":\"Pages_tableHead__wV4CU\",\"activeLink\":\"Pages_activeLink__wWiQU\",\"reviewsContainer\":\"Pages_reviewsContainer__D86Ik\",\"reviewsContainerLeft\":\"Pages_reviewsContainerLeft__SRp1X\",\"reviewsContainerRight\":\"Pages_reviewsContainerRight__O8OdI\"};"],"names":["movieId","useParams","useState","cast","setCast","useEffect","moviesFetchAPI","then","className","s","map","profile_path","name","character","id","src","alt","width","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMoviesQuery","query"],"sourceRoot":""}