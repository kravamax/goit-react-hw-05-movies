{"version":3,"file":"static/js/642.ad61ccb1.chunk.js","mappings":"sMA+CA,UA1CoB,WAClB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACqBN,GAClBO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAWI,QACnC,CAACR,IA6BJ,OACE,yBAAMG,EAAQM,QA1BZ,wBACGN,EAAQO,KACP,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAAsBC,EAA1C,EAAwBC,eAAkBD,YAA1C,OACE,gBAAaE,UAAWC,EAAAA,EAAAA,iBAAxB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,qBAAhB,WACE,gBACEC,IACEJ,EAAYK,SAAS,OAArB,UACOL,EAAYM,MAAM,IADzB,yCAEsCN,GAExCO,IAAI,GACJC,MAAO,OAET,6BAAKX,EAAL,WAGF,cAAGK,UAAWC,EAAAA,EAAAA,sBAAd,SAAwCL,MAdjCC,SAuByB,iD,oLC3CxCU,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkBpC,GAChC,OAAOyB,EAAuB,GAAD,OACxBF,EADwB,kBACNvB,EADM,oBACawB,IAIrC,SAASa,EAAerC,GAC7B,OAAOyB,EAAuB,GAAD,OACxBF,EADwB,kBACNvB,EADM,4BACqBwB,EADrB,oBAKxB,SAASc,EAAkBtC,GAChC,OAAOyB,EAAuB,GAAD,OACxBF,EADwB,kBACNvB,EADM,4BACqBwB,EADrB,2BAKxB,SAASe,EAAiBC,GAC/B,OAAOf,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCgB,EADzC,kC,iBClC/B,KAAgB,mBAAqB,kCAAkC,aAAe,4BAA4B,eAAiB,8BAA8B,eAAiB,8BAA8B,mBAAqB,kCAAkC,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,wBAAwB,cAAgB,6BAA6B,UAAY,yBAAyB,WAAa,0BAA0B,iBAAmB,gCAAgC,qBAAuB,oCAAoC,sBAAwB","sources":["pages/ReviewsPage.jsx","services/movies-api.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport s from './Pages.module.css';\nimport * as moviesFetchAPI from '../services/movies-api';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    moviesFetchAPI\n      .fetchMovieReviews(movieId)\n      .then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  const getReviewsList = () => {\n    return (\n      <ul>\n        {reviews.map(\n          ({ author, content, id, author_details: { avatar_path } }) => (\n            <li key={id} className={s.reviewsContainer}>\n              <div className={s.reviewsContainerLeft}>\n                <img\n                  src={\n                    avatar_path.includes('www')\n                      ? `${avatar_path.slice(1)}`\n                      : `https://image.tmdb.org/t/p/w500${avatar_path}`\n                  }\n                  alt=\"\"\n                  width={100}\n                />\n                <p> {author}:</p>\n              </div>\n\n              <p className={s.reviewsContainerRight}>{content}</p>\n            </li>\n          )\n        )}\n      </ul>\n    );\n  };\n\n  return (\n    <div>{reviews.length ? getReviewsList() : <p>Reviews not found</p>}</div>\n  );\n};\n\nexport default ReviewsPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '296d44092a8a94dcab4a4c4bb6b7444f';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchMoviesQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePageContainer\":\"Pages_moviePageContainer__m+jyf\",\"buttonToBack\":\"Pages_buttonToBack__i+UyM\",\"additionalList\":\"Pages_additionalList__BRN9-\",\"additionalItem\":\"Pages_additionalItem__xw52V\",\"additionalItemLink\":\"Pages_additionalItemLink__-zwF5\",\"castItem\":\"Pages_castItem__CZ8Fz\",\"photoCell\":\"Pages_photoCell__kBgWd\",\"nameCell\":\"Pages_nameCell__ENCJ3\",\"characterCell\":\"Pages_characterCell__dhtuS\",\"tableHead\":\"Pages_tableHead__wV4CU\",\"activeLink\":\"Pages_activeLink__wWiQU\",\"reviewsContainer\":\"Pages_reviewsContainer__D86Ik\",\"reviewsContainerLeft\":\"Pages_reviewsContainerLeft__SRp1X\",\"reviewsContainerRight\":\"Pages_reviewsContainerRight__O8OdI\"};"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","moviesFetchAPI","then","results","length","map","author","content","id","avatar_path","author_details","className","s","src","includes","slice","alt","width","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMoviesQuery","query"],"sourceRoot":""}