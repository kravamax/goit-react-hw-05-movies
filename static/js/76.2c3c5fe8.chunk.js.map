{"version":3,"file":"static/js/76.2c3c5fe8.chunk.js","mappings":"mLAEMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,gCAkB9B,UAhBiB,WACf,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAkCC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAASI,QAChE,KAGD,+BACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,8CAApB,SACGP,IAAS,SAACH,EAAD,CAAYW,OAAQR,U,oLCdhCS,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,oBACab,IAIrC,SAASc,EAAeD,GAC7B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,EADrB,oBAKxB,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,EADrB,2BAKxB,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCiB,EADzC","sources":["components/pages/HomePage.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react';\nimport * as moviesFetchAPI from '../../services/movies-api';\nconst MoviesList = lazy(() => import('../MoviesList'));\n\nconst HomePage = () => {\n  const [films, setFilms] = useState('');\n\n  useEffect(() => {\n    moviesFetchAPI.fetchTrendMovies().then(({ results }) => setFilms(results));\n  }, []);\n\n  return (\n    <>\n      <Suspense fallback={<h2>Loading movies...</h2>}>\n        {films && <MoviesList movies={films} />}\n      </Suspense>\n    </>\n  );\n};\n\nexport default HomePage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '296d44092a8a94dcab4a4c4bb6b7444f';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchMoviesQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n"],"names":["MoviesList","lazy","useState","films","setFilms","useEffect","moviesFetchAPI","then","results","Suspense","fallback","movies","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","fetchMoviesQuery","query"],"sourceRoot":""}